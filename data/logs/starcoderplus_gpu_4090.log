loading env vars from: /home/inflaton/code/chat-with-pci-dss-v4/.env
Running on:  Linux-5.10.16.3-microsoft-standard-WSL2-x86_64-with-glibc2.35
MPS is NOT available
CUDA is  available
MPS not available because the current PyTorch install was not built with MPS enabled.
CUDA is available, we have found  1  GPU(s)
NVIDIA GeForce RTX 4090
CUDA version: 11.7
hf_embeddings_device_type: cuda:0
hf_pipeline_device_type: cuda:0
load INSTRUCTOR_Transformer
max_seq_length  512
Completed in 1.363s
Load index from ./data/chromadb_1024_512/ with Chroma
Completed in 0.259s
initializing LLM: huggingface
  hf_pipeline_device_type: cuda:0
     load_quantized_model: 4bit
              torch_dtype: torch.float16
                 n_threds: 4
            loading model: bigcode/starcoder
╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/huggingface_hub/utils/_errors.py:259 in   │
│ hf_raise_for_status                                                                              │
│                                                                                                  │
│   256 │   </Tip>                                                                                 │
│   257 │   """                                                                                    │
│   258 │   try:                                                                                   │
│ ❱ 259 │   │   response.raise_for_status()                                                        │
│   260 │   except HTTPError as e:                                                                 │
│   261 │   │   error_code = response.headers.get("X-Error-Code")                                  │
│   262                                                                                            │
│                                                                                                  │
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/requests/models.py:1021 in                │
│ raise_for_status                                                                                 │
│                                                                                                  │
│   1018 │   │   │   )                                                                             │
│   1019 │   │                                                                                     │
│   1020 │   │   if http_error_msg:                                                                │
│ ❱ 1021 │   │   │   raise HTTPError(http_error_msg, response=self)                                │
│   1022 │                                                                                         │
│   1023 │   def close(self):                                                                      │
│   1024 │   │   """Releases the connection back to the pool. Once this method has been            │
╰──────────────────────────────────────────────────────────────────────────────────────────────────╯
HTTPError: 401 Client Error: Unauthorized for url: 
https://huggingface.co/bigcode/starcoder/resolve/main/config.json

The above exception was the direct cause of the following exception:

╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/transformers/utils/hub.py:417 in          │
│ cached_file                                                                                      │
│                                                                                                  │
│    414 │   user_agent = http_user_agent(user_agent)                                              │
│    415 │   try:                                                                                  │
│    416 │   │   # Load from URL or cache if already cached                                        │
│ ❱  417 │   │   resolved_file = hf_hub_download(                                                  │
│    418 │   │   │   path_or_repo_id,                                                              │
│    419 │   │   │   filename,                                                                     │
│    420 │   │   │   subfolder=None if len(subfolder) == 0 else subfolder,                         │
│                                                                                                  │
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/huggingface_hub/utils/_validators.py:118  │
│ in _inner_fn                                                                                     │
│                                                                                                  │
│   115 │   │   if check_use_auth_token:                                                           │
│   116 │   │   │   kwargs = smoothly_deprecate_use_auth_token(fn_name=fn.__name__, has_token=ha   │
│   117 │   │                                                                                      │
│ ❱ 118 │   │   return fn(*args, **kwargs)                                                         │
│   119 │                                                                                          │
│   120 │   return _inner_fn  # type: ignore                                                       │
│   121                                                                                            │
│                                                                                                  │
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/huggingface_hub/file_download.py:1195 in  │
│ hf_hub_download                                                                                  │
│                                                                                                  │
│   1192 │   if not local_files_only:                                                              │
│   1193 │   │   try:                                                                              │
│   1194 │   │   │   try:                                                                          │
│ ❱ 1195 │   │   │   │   metadata = get_hf_file_metadata(                                          │
│   1196 │   │   │   │   │   url=url,                                                              │
│   1197 │   │   │   │   │   token=token,                                                          │
│   1198 │   │   │   │   │   proxies=proxies,                                                      │
│                                                                                                  │
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/huggingface_hub/utils/_validators.py:118  │
│ in _inner_fn                                                                                     │
│                                                                                                  │
│   115 │   │   if check_use_auth_token:                                                           │
│   116 │   │   │   kwargs = smoothly_deprecate_use_auth_token(fn_name=fn.__name__, has_token=ha   │
│   117 │   │                                                                                      │
│ ❱ 118 │   │   return fn(*args, **kwargs)                                                         │
│   119 │                                                                                          │
│   120 │   return _inner_fn  # type: ignore                                                       │
│   121                                                                                            │
│                                                                                                  │
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/huggingface_hub/file_download.py:1541 in  │
│ get_hf_file_metadata                                                                             │
│                                                                                                  │
│   1538 │   │   proxies=proxies,                                                                  │
│   1539 │   │   timeout=timeout,                                                                  │
│   1540 │   )                                                                                     │
│ ❱ 1541 │   hf_raise_for_status(r)                                                                │
│   1542 │                                                                                         │
│   1543 │   # Return                                                                              │
│   1544 │   return HfFileMetadata(                                                                │
│                                                                                                  │
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/huggingface_hub/utils/_errors.py:291 in   │
│ hf_raise_for_status                                                                              │
│                                                                                                  │
│   288 │   │   │   │   " `repo_type`.\nIf you are trying to access a private or gated repo,"      │
│   289 │   │   │   │   " make sure you are authenticated."                                        │
│   290 │   │   │   )                                                                              │
│ ❱ 291 │   │   │   raise RepositoryNotFoundError(message, response) from e                        │
│   292 │   │                                                                                      │
│   293 │   │   elif response.status_code == 400:                                                  │
│   294 │   │   │   message = (                                                                    │
╰──────────────────────────────────────────────────────────────────────────────────────────────────╯
RepositoryNotFoundError: 401 Client Error. (Request ID: Root=1-64ae331c-6f8d77b94ca525133700f915)

Repository Not Found for url: https://huggingface.co/bigcode/starcoder/resolve/main/config.json.
Please make sure you specified the correct `repo_id` and `repo_type`.
If you are trying to access a private or gated repo, make sure you are authenticated.
Invalid username or password.

During handling of the above exception, another exception occurred:

╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮
│ /home/inflaton/code/chat-with-pci-dss-v4/test.py:88 in <module>                                  │
│                                                                                                  │
│    85 start = timer()                                                                            │
│    86 qa_chain = QAChain(vectorstore, llm_model_type)                                            │
│    87 custom_handler = MyCustomHandler()                                                         │
│ ❱  88 qa_chain.init(                                                                             │
│    89 │   custom_handler, n_threds=n_threds, hf_pipeline_device_type=hf_pipeline_device_type     │
│    90 )                                                                                          │
│    91 qa = qa_chain.get_chain()                                                                  │
│                                                                                                  │
│ /home/inflaton/code/chat-with-pci-dss-v4/app_modules/qa_chain.py:189 in init                     │
│                                                                                                  │
│   186 │   │   │   │   )                                                                          │
│   187 │   │   │   │   padding_side = "left"  # if "dolly" in MODEL_NAME_OR_PATH else None        │
│   188 │   │   │   │                                                                              │
│ ❱ 189 │   │   │   │   config = AutoConfig.from_pretrained(                                       │
│   190 │   │   │   │   │   MODEL_NAME_OR_PATH, trust_remote_code=True                             │
│   191 │   │   │   │   )                                                                          │
│   192 │   │   │   │   # config.attn_config["attn_impl"] = "triton"                               │
│                                                                                                  │
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/transformers/models/auto/configuration_au │
│ to.py:955 in from_pretrained                                                                     │
│                                                                                                  │
│   952 │   │   kwargs["_from_auto"] = True                                                        │
│   953 │   │   kwargs["name_or_path"] = pretrained_model_name_or_path                             │
│   954 │   │   trust_remote_code = kwargs.pop("trust_remote_code", None)                          │
│ ❱ 955 │   │   config_dict, unused_kwargs = PretrainedConfig.get_config_dict(pretrained_model_n   │
│   956 │   │   has_remote_code = "auto_map" in config_dict and "AutoConfig" in config_dict["aut   │
│   957 │   │   has_local_code = "model_type" in config_dict and config_dict["model_type"] in CO   │
│   958 │   │   trust_remote_code = resolve_trust_remote_code(                                     │
│                                                                                                  │
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/transformers/configuration_utils.py:617   │
│ in get_config_dict                                                                               │
│                                                                                                  │
│    614 │   │   """                                                                               │
│    615 │   │   original_kwargs = copy.deepcopy(kwargs)                                           │
│    616 │   │   # Get config dict associated with the base config file                            │
│ ❱  617 │   │   config_dict, kwargs = cls._get_config_dict(pretrained_model_name_or_path, **kwar  │
│    618 │   │   if "_commit_hash" in config_dict:                                                 │
│    619 │   │   │   original_kwargs["_commit_hash"] = config_dict["_commit_hash"]                 │
│    620                                                                                           │
│                                                                                                  │
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/transformers/configuration_utils.py:672   │
│ in _get_config_dict                                                                              │
│                                                                                                  │
│    669 │   │   │                                                                                 │
│    670 │   │   │   try:                                                                          │
│    671 │   │   │   │   # Load from local folder or from cache or download from model Hub and ca  │
│ ❱  672 │   │   │   │   resolved_config_file = cached_file(                                       │
│    673 │   │   │   │   │   pretrained_model_name_or_path,                                        │
│    674 │   │   │   │   │   configuration_file,                                                   │
│    675 │   │   │   │   │   cache_dir=cache_dir,                                                  │
│                                                                                                  │
│ /home/inflaton/miniconda3/lib/python3.10/site-packages/transformers/utils/hub.py:433 in          │
│ cached_file                                                                                      │
│                                                                                                  │
│    430 │   │   )                                                                                 │
│    431 │                                                                                         │
│    432 │   except RepositoryNotFoundError:                                                       │
│ ❱  433 │   │   raise EnvironmentError(                                                           │
│    434 │   │   │   f"{path_or_repo_id} is not a local folder and is not a valid model identifie  │
│    435 │   │   │   "listed on 'https://huggingface.co/models'\nIf this is a private repository,  │
│    436 │   │   │   "pass a token having permission to this repo with `use_auth_token` or log in  │
╰──────────────────────────────────────────────────────────────────────────────────────────────────╯
OSError: bigcode/starcoder is not a local folder and is not a valid model identifier listed on 
'https://huggingface.co/models'
If this is a private repository, make sure to pass a token having permission to this repo with 
`use_auth_token` or log in with `huggingface-cli login` and pass `use_auth_token=True`.
